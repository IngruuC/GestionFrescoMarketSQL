<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Q5MGjwAAAABJRU5ErkJggg==
</value>
  </data>
</root>