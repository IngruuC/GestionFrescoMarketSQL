<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jlP+DwKmC3S3vLAHAAAAAElFTkSuQmCC
</value>
  </data>
</root>