<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>