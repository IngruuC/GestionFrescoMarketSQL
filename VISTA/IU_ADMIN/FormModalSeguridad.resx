<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAdministrarBD.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAA/VJREFUWEe9mUmolEcUhT+jxgEkzjhGjDiBw0IcFgpxihgNMY4rcUQQRUVBF4o4
        heBA0OgibqJowCniEFBRVNyIKDii4oAGEnHhFBWNihg5zf2l+nZ193uvu/8Dh+73d9WtU/VX3TpVD4qj
        ATAEWAT8CpwE7gAPgKfAB+A/+34PuArsB9YCM4BuPmA50BSYB5wB3gD/l8iHwE7gG+Az31h10B7YViZR
        +fgXMBuo4xsvhFrAYuB1JGCleB3o7YXEIHHbIwHS4EtguBfkMSdSMU0+Alp5USE01L5S2lzqRYVQD3yF
        tPmzFxViR6RCmlQe/dqLCtEC+CdSMS1u9oI8lDi/BC5HKleSGrkfrf2CyfsPoCFQH1gC/BsJVm6eBwZZ
        +/2AlU5TFlThVjAPkm3uUiRwKdR+vQsYYbm3HrACeAtsdZqyEAY5ZkIVQOgEzAR+B25aMN9wPj4GzgLr
        gW+BRhZTn/OBv4OyVRaYUG5FvesP1A7K6ntH68RIYIJ1YDIwDhhmr0xvIUQTYKx19FWkvYICn0cqhHwG
        nLCRmAoMBbqbiC8sRl0T0RroA3wHLAB+Ay4C7yNxQ/7iNGVB3s1XSJujvagQslhPIpXSol57UXS2ReAr
        V5qae597MR4L7VOra02eSVxuyqCMsnabA1MCPTlQhd2B5dGnzOuNSOBS+A44BIwJ3LQywf1iqzgJoNX8
        k63EBFqtsufqgJJ5dfKgDlHaMTYC37vUMxg4GpStksCE6ukRYBrQzpVVHvwqTx4cb3lQubOZq6cR6wus
        so76NgsKfBGpEPIusAdYDkwEBtqiUt5LdgcJ198tgZ52epNw+Tzl0GJt+DyoeandJrNJaF74CmlTdm8D
        0MEETrfnmUOVtq40HIyn7N1e4KBtrXqm4652oFn2t3alDHrZrYAPUgkeALokDQeQ/UocVJKTMwK1SoXG
        wDqzRT5oubg6W1MOdM2iOZuUzwjUF52LNTGFtnbKiq22UqiRy4fTkfLiJ4Gi9mM5W63EBD2AuTZXblsK
        8kHyUXn1gt3LyN7HXmsCXTIp1XjqKJITWBP1sOW2MGkLymcysUq0MqExPzgAaBPU0bzSgqgxivlBjZys
        +jITFMuDguaPnumUqEUnC6X5rQ7rDVQXP9hFVip+sCYC95lxScUPXvGtVwHXLN1kIFOgV+kDl5Nds9sv
        COlRnU3hw0r7QW2pyWmxEFTmTzvHaF/PQaX8oKibhEIi9Zssn8pu8T/GUIoflIM5Z05lEnDcniuFxS7W
        1ZZGTmVOVeUoEEM+Pyj3oe9KLcr+YR5MoJsEjUpyBNXC0UoV9Z8BPdNvKlMjceWCcqRcts4lmu+6F9dq
        1YLImXMfAS6p6gSINByUAAAAAElFTkSuQmCC
</value>
  </data>
</root>